import classNames from 'classnames/bind';
import moment from 'moment';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import React from 'react';
import { getAuthor } from 'services';
import { Loader } from '../../components';
import styles from '../../components/Post/Post.module.scss';

const cx = classNames.bind(styles);

export default function about({ data }) {
  // eslint-disable-next-line react-hooks/rules-of-hooks
  const router = useRouter();

  if (router.isFallback) {
    return <Loader />;
  }

  const getContentFragment = (index, text, obj, type) => {
    let modifiedText = text;

    if (obj.bold) {
      modifiedText = <b key={index}>{text}</b>;
    }
    if (obj.italic) {
      modifiedText = <em key={index}>{text}</em>;
    }
    if (obj.underline) {
      modifiedText = <u key={index}>{text}</u>;
    }

    switch (type) {
      case 'heading-three':
        return (
          <h3 key={index} className="text-xl font-semibold mb-4">
            {modifiedText.map((item, i) => (
              <React.Fragment key={i}>{item}</React.Fragment>
            ))}
          </h3>
        );
      case 'paragraph':
        return (
          <p key={index} className={cx('paragraph')}>
            {modifiedText.map((item, i) => (
              <React.Fragment key={i}>{item}</React.Fragment>
            ))}
          </p>
        );
      case 'heading-four':
        return (
          <h4 key={index} className="text-md font-semibold mb-4">
            {modifiedText.map((item, i) => (
              <React.Fragment key={i}>{item}</React.Fragment>
            ))}
          </h4>
        );
      case 'image':
        return (
          // eslint-disable-next-line @next/next/no-img-element
          <img key={index} alt={obj.title} height={obj.height} width={obj.width} src={obj.src} />
        );
      default:
        return modifiedText;
    }
  };
  return (
    <div className="container mb-8">
      <Head>
        <title>KIRA</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="grid grid-cols-1">
        <article className={cx('')}>
          <h1 className={cx('title')}>
            <Link href={`#`}>ABOUT ME</Link>
          </h1>
          <span className="text-left font-semibold">About Me</span>
          <div>
            <Link href={`#`}>
              <img alt="11" className={cx('img')} height={500} width="100%" src={data[0].photo.url} />
            </Link>
          </div>

          <div className="mt-1">
            {data[0].content.raw.children.map((typeObj, index) => {
              const children = typeObj.children.map((item, itemIndex) => {
                return getContentFragment(itemIndex, item.text, item);
              });
              return getContentFragment(index, children, typeObj, typeObj.type);
            })}
          </div>
        </article>
      </div>
    </div>
  );
}

//Hàm này chỉ chạy phía server và client không chạy
//Next js có hỗ trợ fetch api
export async function getStaticProps() {
  //get bai post theo params
  const data = await getAuthor();
  console.log(data);
  return {
    props: {
      data,
    },
  };
}
